version: "3.7"

services:
  main:
    container_name: main
    restart: always
    build:
      context: .
      target: ${NODE_ENV}
    user: "node"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/dist
      - /usr/src/app/node_modules
    ports:
      - ${PORT}:${PORT}
      - 9229:9229 # FOR DEBUG
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - redis
      - mongo

  redis:
    image: redis
    container_name: redis
    restart: always
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - webnet

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - ./.docker/mongo/mongod.conf:/etc/mongod.conf
      - ./.docker/mongo/initdb.d/:/docker-entrypoint-initdb.d/
      - ./.docker/mongo/data/db/:/data/db/
      # - ./.docker/mongo/data/log/:/var/log/mongo/
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    command: ["-f", "/etc/mongod.conf"]
    networks:
      - webnet

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASSWORD}
     
      
    networks:
      - webnet
    depends_on:
      - mongo

networks:
  webnet:
